# Prometheus Deployment Configuration
# Version: v2.45.0
# Purpose: Metrics collection and monitoring for tech transfer data aggregation system

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus
    component: monitoring
    part-of: tech-transfer-system
spec:
  replicas: 1  # Single replica as Prometheus uses local storage
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
        component: monitoring
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      # Security Context for running as non-root user
      securityContext:
        fsGroup: 65534  # nobody group
        runAsUser: 65534  # nobody user
        runAsNonRoot: true
      
      serviceAccountName: prometheus  # Service account for RBAC
      
      containers:
      - name: prometheus
        image: prom/prometheus:v2.45.0  # Official Prometheus image
        ports:
        - containerPort: 9090
          protocol: TCP
          name: http
        
        # Prometheus server arguments
        args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --storage.tsdb.retention.time=15d  # 15 day retention period
        - --web.enable-lifecycle  # Enable runtime config reload
        - --web.enable-admin-api  # Enable admin API
        - --web.console.libraries=/usr/share/prometheus/console_libraries
        - --web.console.templates=/usr/share/prometheus/consoles
        
        # Resource limits and requests
        resources:
          requests:
            cpu: 500m  # 0.5 CPU cores
            memory: 2Gi
          limits:
            cpu: 1000m  # 1 CPU core
            memory: 4Gi
        
        # Volume mounts for config and storage
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-storage
          mountPath: /prometheus
        
        # Liveness probe for container health
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 10
          failureThreshold: 3
        
        # Readiness probe for service availability
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 10
          failureThreshold: 3
      
      # Volume definitions
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config  # ConfigMap containing prometheus.yml
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: prometheus-storage  # PVC for time series data