# Kibana Deployment Configuration
# Version: 8.9.0
# Purpose: Monitoring interface deployment for technology transfer data aggregation system
# Dependencies: 
# - Elasticsearch service (elasticsearch:9200)
# - elastic-credentials secret for authentication

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: monitoring
  labels:
    app: kibana
    component: monitoring
    tier: visualization
spec:
  replicas: 1  # Single replica as Kibana doesn't require HA setup
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5601"
    spec:
      serviceAccountName: kibana  # Use dedicated service account for security
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:8.9.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5601
              protocol: TCP
              name: http
          env:
            - name: ELASTICSEARCH_HOSTS
              value: "http://elasticsearch:9200"
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: elastic-credentials
                  key: username
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elastic-credentials
                  key: password
            - name: SERVER_NAME
              value: "kibana.monitoring.svc.cluster.local"
            - name: MONITORING_ENABLED
              value: "true"
            - name: LOGGING_VERBOSE
              value: "false"
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1000m
              memory: 2Gi
          readinessProbe:
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /api/status
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: kibana-config
              mountPath: /usr/share/kibana/config
              readOnly: true
      volumes:
        - name: kibana-config
          configMap:
            name: kibana-config
            defaultMode: 0440
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - kibana
                topologyKey: kubernetes.io/hostname

---
# Service definition for Kibana
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: monitoring
  labels:
    app: kibana
    component: monitoring
spec:
  type: ClusterIP
  ports:
    - port: 5601
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: kibana

---
# Network Policy for Kibana
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kibana-network-policy
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      app: kibana
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 5601
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: elasticsearch
      ports:
        - protocol: TCP
          port: 9200