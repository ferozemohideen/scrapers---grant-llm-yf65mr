# Kubernetes Secret for Backend Services
# Version: 1.0.0
# Purpose: Securely store sensitive configuration data with AES-256 encryption at rest
apiVersion: v1
kind: Secret
metadata:
  name: backend-secrets
  namespace: tech-transfer
  labels:
    app: tech-transfer
    component: backend
    environment: production
  annotations:
    encryption.kubernetes.io/encryption-provider: aescbc # Enable AES-256 encryption
    kubernetes.io/description: "Sensitive configuration for backend services"
type: Opaque
stringData:
  # PostgreSQL Database Credentials
  postgres-credentials.json: |
    {
      "username": "tech_transfer_user",
      "password": "${POSTGRES_PASSWORD}",
      "ssl": {
        "mode": "verify-full",
        "ca": "${POSTGRES_CA_CERT}",
        "key": "${POSTGRES_CLIENT_KEY}",
        "cert": "${POSTGRES_CLIENT_CERT}"
      }
    }

  # MongoDB Credentials and Configuration
  mongodb-credentials.json: |
    {
      "uri": "mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_HOST}:27017/${MONGO_DB}",
      "replicaSet": "rs0",
      "ssl": {
        "enabled": true,
        "ca": "${MONGO_CA_CERT}",
        "validateHostname": true
      }
    }

  # Redis Credentials and SSL Configuration
  redis-credentials.json: |
    {
      "password": "${REDIS_PASSWORD}",
      "ssl": {
        "enabled": true,
        "ca": "${REDIS_CA_CERT}",
        "cert": "${REDIS_CLIENT_CERT}",
        "key": "${REDIS_CLIENT_KEY}"
      }
    }

  # JWT Authentication Secrets
  jwt-secrets.json: |
    {
      "secret": "${JWT_SECRET}",
      "refreshTokenSecret": "${JWT_REFRESH_SECRET}",
      "tokenExpiry": "1h",
      "refreshTokenExpiry": "7d",
      "issuer": "tech-transfer-platform",
      "algorithm": "HS512"
    }

  # External API Keys
  api-keys.json: |
    {
      "openai": {
        "apiKey": "${OPENAI_API_KEY}",
        "model": "gpt-4",
        "organization": "${OPENAI_ORG_ID}"
      },
      "nasa": {
        "apiKey": "${NASA_API_KEY}"
      }
    }

  # Encryption Keys for Data Protection
  encryption-keys.json: |
    {
      "key": "${AES_256_KEY}",
      "algorithm": "aes-256-gcm",
      "iv": "${AES_IV}",
      "keyRotationInterval": "30d"
    }

  # Session Configuration
  session-config.json: |
    {
      "secret": "${SESSION_SECRET}",
      "name": "tech_transfer_sid",
      "cookie": {
        "secure": true,
        "httpOnly": true,
        "sameSite": "strict",
        "maxAge": 86400000
      }
    }

  # Security Configuration
  security-config.json: |
    {
      "cors": {
        "allowedOrigins": ["https://techtransfer.com"],
        "allowedMethods": ["GET", "POST", "PUT", "DELETE"],
        "allowCredentials": true
      },
      "rateLimit": {
        "windowMs": 900000,
        "maxRequests": 1000
      }
    }